openapi: 3.0.3
info:
  title: "N-MULTIFIBRA Kanban API"
  description: "API para gerenciar o quadro Kanban da equipe de Suporte da N-MULTIFIBRA. Permite a autenticação de usuários e a manipulação de boards, colunas e cards."
  version: "1.0.0"
servers:
  - url: http://localhost:8080/api
    description: Servidor de desenvolvimento local
tags:
  - name: Auth
    description: Operações de Autenticação
  - name: Boards
    description: Gerenciamento de Quadros (Boards)
  - name: Columns
    description: Gerenciamento de Colunas
  - name: Cards
    description: Gerenciamento de Tarefas (Cards)

paths:
  /login:
    post:
      tags:
        - Auth
      summary: "Realiza o login de um usuário"
      description: "Autentica um usuário com email e senha, retornando um cookie `auth_token` em caso de sucesso."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: "Login bem-sucedido. O cookie de autenticação é definido no header `Set-Cookie`."
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/User'
        '400':
          description: "Dados inválidos na requisição."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: "Credenciais inválidas."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /logout:
    post:
      tags:
        - Auth
      summary: "Realiza o logout do usuário"
      description: "Remove o cookie de autenticação do usuário."
      responses:
        '200':
          description: "Logout bem-sucedido."
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "logout sucesso"
  /boards:
    get:
      tags:
        - Boards
      summary: "Lista todos os boards"
      security:
        - cookieAuth: []
      responses:
        '200':
          description: "Uma lista de boards."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Board'
        '401':
          description: "Não autorizado."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Boards
      summary: "Cria um novo board"
      security:
        - cookieAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BoardInput'
      responses:
        '201':
          description: "Board criado com sucesso."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Board'
        '400':
          description: "Dados inválidos."
        '401':
          description: "Não autorizado."
  /boards/{id}/columns:
    get:
      tags:
        - Columns
      summary: "Lista as colunas de um board"
      security:
        - cookieAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: "ID do board"
          schema:
            type: integer
      responses:
        '200':
          description: "Lista de colunas do board."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Column'
        '401':
          description: "Não autorizado."
  /columns/{id}/cards:
    get:
      tags:
        - Cards
      summary: "Lista os cards de uma coluna"
      security:
        - cookieAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: "ID da coluna"
          schema:
            type: integer
      responses:
        '200':
          description: "Lista de cards da coluna."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Card'
        '401':
          description: "Não autorizado."
    post:
      tags:
        - Cards
      summary: "Cria um novo card em uma coluna"
      security:
        - cookieAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: "ID da coluna onde o card será criado"
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardInput'
      responses:
        '201':
          description: "Card criado com sucesso."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Card'
        '400':
          description: "Dados inválidos."
        '401':
          description: "Não autorizado."
  /cards/{id}:
    put:
      tags:
        - Cards
      summary: "Atualiza um card existente"
      security:
        - cookieAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: "ID do card a ser atualizado"
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardInput'
      responses:
        '200':
          description: "Card atualizado."
        '400':
          description: "Dados inválidos."
        '401':
          description: "Não autorizado."
    delete:
      tags:
        - Cards
      summary: "Deleta um card"
      security:
        - cookieAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: "ID do card a ser deletado"
          schema:
            type: integer
      responses:
        '200':
          description: "Card deletado com sucesso."
        '401':
          description: "Não autorizado."
  /cards/{id}/move:
    put:
      tags:
        - Cards
      summary: "Move um card"
      security:
        - cookieAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: "ID do card a ser movido"
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MoveRequest'
      responses:
        '200':
          description: "Card movido com sucesso."
        '400':
          description: "Dados inválidos."
        '401':
          description: "Não autorizado."

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
        email:
          type: string
          format: email
        created_at:
          type: string
          format: date-time
          readOnly: true
        avatar:
          type: string
        role:
          type: string
          
    Board:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
        description:
          type: string
        owner_id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true

    BoardInput:
      type: object
      properties:
        title:
          type: string
          example: "Suporte N-MULTIFIBRA"
        description:
          type: string
          example: "Board principal para o time de suporte"

    Column:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        board_id:
          type: integer
          readOnly: true
        title:
          type: string
        position:
          type: integer
          
    Card:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        column_id:
          type: integer
          readOnly: true
        title:
          type: string
        description:
          type: string
        assigned_to:
          type: string
        priority:
          type: string
          enum: [baixa, media, alta]
        due_date:
          type: string
          format: date-time
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        position:
          type: integer
          readOnly: true
          
    CardInput:
      type: object
      required:
        - title
      properties:
        title:
          type: string
          example: "Verificar O.S. 12345"
        description:
          type: string
          example: "Cliente informou lentidão na conexão."
        assigned_to:
          type: string
          example: "eduardo"
        priority:
          type: string
          enum: [baixa, media, alta]
          default: media
        due_date:
          type: string
          format: date-time
          nullable: true
          example: "2025-06-20T18:00:00Z"
          
    LoginRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
          example: "admin@kanban.local"
        password:
          type: string
          format: password
          example: "admin123"
          
    MoveRequest:
      type: object
      required:
        - column_id
        - position
      properties:
        column_id:
          type: integer
          description: "ID da nova coluna para onde o card será movido."
        position:
          type: integer
          description: "Nova posição do card na coluna (atualmente não implementado com precisão no backend, pode usar 0)."

    Error:
      type: object
      properties:
        error:
          type: string

  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: auth_token